<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" creationComplete="setup();" 
		xmlns:s="library://ns.adobe.com/flex/spark" title="Driver" actionBarVisible="false" backgroundAlpha="0" viewActivate="view1_viewActivateHandler(event)">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import spark.events.IndexChangeEvent;
			import spark.events.ViewNavigatorEvent;
			//import skins.ButtonSkinBlack;
			import skins.ButtonSkinIcon;
			import skins.ButtonSkinTab;
			//import skins.carpoolItemRenderer;
			private var fname:String = "kirsty";
			private var phoneNumber:String = "0221615775";
			private var userPassword:String = "password";
			[Bindable]protected var ac:ArrayCollection = new ArrayCollection();
			[Bindable] protected var output:String = "";

			
			// Creation Complete
			public function setup():void
			{
				// Attempt to get repsonse from server.
				try
				{
					genLoader().load(genRequest());
					print("Loading Tring Data...");
				}
				catch (error:Error)
				{
					print("Unable to load URL");
				}
			}
			
			
			// Generates a query string
			//protected function genQuery():URLVariables
			//{
				//var requestVars:URLVariables = new URLVariables();
				//requestVars.icp = "0000067894TR-CE6";
				//requestVars.raw_start = "2013-11-01";
				
				//return requestVars;
			//}
			
			// Generates a request.
			protected function genRequest():URLRequest
			{
				var request:URLRequest = new URLRequest();
				request.url = "http://111.67.18.188/getDriverGroups";
				request.method = URLRequestMethod.GET;
				//request.data = genQuery();
				
				return request;
			}
			
			// Generates a loader, and applies callbacks.
			protected function genLoader():URLLoader
			{
				var loader:URLLoader = new URLLoader();
				loader.dataFormat = URLLoaderDataFormat.TEXT;
				loader.addEventListener(Event.COMPLETE, loaderCompleteHandler);
				loader.addEventListener(HTTPStatusEvent.HTTP_STATUS, httpStatusHandler);
				loader.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
				loader.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
				
				return loader;
			}
			
			// Activates when we get a response from the request.
			public function loaderCompleteHandler(e:Event):void
			{
				try 
				{
					print(e.target.data);
					var res:Object = JSON.parse(e.target.data);
					for (var gi in res) {
						print(res[gi].group_name);
					}
				}
				catch (e:Error)
				{
					print("Failed to parse JSON: " + e.message);
				}
			}
			
			
			// Error handling - prints errors to console, if request fails.
			public function httpStatusHandler(e:Event):void
			{
				print("httpStatusHandler:" + e.toString());
			}
			
			public function securityErrorHandler (e:Event):void
			{
				print("securityErrorHandler:" + e.toString());
			}
			
			public function ioErrorHandler(e:Event):void
			{
				print("ioErrorHandler: " + e.toString());
			}

			
			// A function to output messages on the screen and trace them in the console
			public function print(str:String):void
			{
				output = str;
				trace(str);
			}
			
			
			protected function view1_viewActivateHandler(event:ViewNavigatorEvent):void
			{
				//currentState = 'default';

				ac.addItem({group_name:"Soccer practice", user_id:"Nick L", 
					origin:"Harbourview, Lower Hutt", destination:"11 Cable Street, Wellington", 
					arrival_time:"9am", departure_time:"5:30pm", days:"Mon - Fri", seats:"2/3"});
				
				ac.addItem({group_name:"Loyalty NZ", user_id:"Kirsty M",
					origin:"Harbourview, Lower Hutt", destination:"11 Cable Street, Wellington", 
					arrival_time:"9am", departure_time:"5:30pm", days:"Mon - Fri", seats:"2/3"});
				
				ac.addItem({group_name:"Gym", user_id:"Kirsty M", 
					origin:"Harbourview, Lower Hutt", destination:"11 Cable Street, Wellington", 
				arrival_time:"9am", departure_time:"5:30pm", days:"Mon - Fri", seats:"2/3"});	
		
			}
			

			protected function passengerView():void
			{
				navigator.pushView(passengerHomeView);
				
			}
			
			protected function driverView():void
			{ 
				
				navigator.pushView(driverHomeView);
				
			}
			
			protected function notifyView():void
			{ 
				navigator.pushView(notificationsView);	
			}
			
			
			
			protected function onChange(event:IndexChangeEvent):void
			{
				//				lbl.text = list.selectedItem.label + " selected";
			}
			
			
			
			
		
			
			// The event listener for the click event.
			private function itemClickInfo(event:MouseEvent):void {
				switch (event.currentTarget.label) { 
					case "Add" : 
						navigator.pushView(notificationsView);						break; 
					case "Cancel" : 
						navigator.pushView(treeView);						break; 
					case "Delete" : 
						logout();						break; 
				}                
			}
			
			protected function logout():void
			{
				
				
			}
			
			protected function view1_menuKeyPressedHandler(event:FlexEvent):void
			{
				trace("Menu key pressed");
				
			}
			
			
			protected function view1_mouseDownHandler(event:MouseEvent):void
			{
				mx.core.FlexGlobals.topLevelApplication.viewMenuOpen=true;
				trace("Mouse down");
			}
			
		]]>
		
	</fx:Script>
	
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		#next, #previous {borderVisible:false;}	
	</fx:Style>
	

	<s:viewMenuItems>
		<s:ViewMenuItem label="Notifications" click="itemClickInfo(event)" color="#ffffff" height="35" top="35"/>
		<s:ViewMenuItem label="Carbon savings" click="itemClickInfo(event)" color="#ffffff" height="35"/>
		<s:ViewMenuItem label="Log out" click="itemClickInfo(event)" color="#ffffff" height="35"/>
		
	</s:viewMenuItems>
	
	<s:BitmapImage width="100%" height="100%" source="@Embed('/assets/tree.jpg')"/>
	
	
	<!-- The output for messages etc. dataProvider="{ac}" 
	<s:TextArea left="32" top="2" right="32" text="{output}" editable="false" height="50"/>-->
	
	
	
	<s:Label text="You have saved the envroment from 11,440 lbs of C02" left="20" top="65" fontSize="15" width="250"/>
	<s:Label text="It would have taken 226 trees a year to absorb that much CO2!" left="20" top="105" fontSize="15" width="300"/>
	
	<!--<s:Label text="Ranking: Tree Hugger" left="110" bottom="30" fontSize="18" width="300" color="#666666"/>-->
	
	<s:Rect  left="10" right="10" top="49" height="115"  >
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="0xFFFFFF" 
								 
								 alpha="0.40" />
				<s:GradientEntry color="0xD8D8D8" 
								 
								 alpha="0.4" />
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	<s:Ellipse left="310" top="11" height="36" width="36">
		<s:fill>
			
			<s:RadialGradient>
				<s:entries>
					<s:GradientEntry color="0x000000" alpha="0.4"/>
					
				</s:entries>
			</s:RadialGradient>
		</s:fill>
	</s:Ellipse>
	
	<s:Button color="#ffffff" id="passenger" label="Passenger" click="passengerView()" left="9" top="10" width="109" skinClass="skins.ButtonSkinTab" height="40" fontSize="15" alpha="0.3" chromeColor="#000000"/>
	<s:Button color="#ffffff" id="driver" label="Driver" click="driverView()" left="119" top="10" width="109" skinClass="skins.ButtonSkinTab" height="40" fontSize="15" alpha="0.3" chromeColor="#000000"/>
	<s:Button id="notifications" click="mx.core.FlexGlobals.topLevelApplication.viewMenuOpen=true;" left="273" top="10" width="110" skinClass="skins.ButtonSkinIcon" height="40" fontSize="15" alpha="1" icon="@Embed(source='assets/menu.png')"/>
	
	
	
</s:View>
